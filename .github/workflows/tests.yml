# This is a basic workflow to generate build
name: "Test-Cases"

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for every branch
on:
  push:
    branches:
      - 'develop'         # matches develop branch
      - '*'
  workflow_dispatch:
    inputs:
      comment:
        description: 'Add comment for manual workflow execution.'
        required: false
        default: 'Manual execution of Github workflow.'

jobs:
  Test-Cases:
    name: "Test Cases"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Pre-steps"
        run: |
          echo "Executing pre-steps"
          pwd
          ls
          cd test_apps
          ls
          echo "Pre-steps execution completed."


      - name: "Successfully Passing App"
        run: |
          echo "Running the build and app-inspect checks for correct Splunk App so, it should ideally pass the test."
      
      - uses: VatsalJagani/splunk-app-action@v0.6
        with:
          app_dir: "success_app_for_splunk"
          app_build_name: "success_app"
          splunkbase_username: ${{ secrets.SPLUNKBASE_USERNAME }}
          splunkbase_password: ${{ secrets.SPLUNKBASE_PASSWORD }}


      - name: "App-Inspect Failing App"
        run: |
          echo "Running the build and app-inspect checks for an test-app that will fail the app-inspect checks. So, it should fail the GitHub action."
      
      - uses: VatsalJagani/splunk-app-action@v0.6
        continue-on-error: true
        with:
          app_dir: "failure_app_for_splunk"
          app_build_name: "failure_app"
          splunkbase_username: ${{ secrets.SPLUNKBASE_USERNAME }}
          splunkbase_password: ${{ secrets.SPLUNKBASE_PASSWORD }}


      - name: "Run commands before generating App Build"
        run: |
          echo "Running some user defined commands before generating the build and perform the app-inspect checks. If user defined commands executes successful then app-inspect will pass otherwise it will fail."
      
      - uses: VatsalJagani/splunk-app-action@v0.6
        env:
          SPLUNK_APP_ACTION_1: "cd run_commands_app_for_splunk"
          SPLUNK_APP_ACTION_2: "cd .."
          SPLUNK_APP_ACTION_3: "cp -r success_app_for_splunk/static run_commands_app_for_splunk/"
        with:
          app_dir: "run_commands_app_for_splunk"
          app_build_name: "run_commands_app"
          splunkbase_username: ${{ secrets.SPLUNKBASE_USERNAME }}
          splunkbase_password: ${{ secrets.SPLUNKBASE_PASSWORD }}


      - name: "Generate app build with repo root directory"
        run: |
          echo "Generating app build with repo's root directory, scenario replicated with pre-steps and post steps cd commands."
          cd success_app_for_splunk_with_root_dir
      
      - uses: VatsalJagani/splunk-app-action@v0.6
        with:
          app_dir: "."
          app_build_name: "success_repo_root_app"
          splunkbase_username: ${{ secrets.SPLUNKBASE_USERNAME }}
          splunkbase_password: ${{ secrets.SPLUNKBASE_PASSWORD }}
      
      - name: "post step for app build with repo root directory"
        run: |
          cd ..


      - name: "App-Inspect on app without app package id in app.conf (with input parameter app_package_id)"
        run: |
          echo "Running the build and app-inspect checks for an test-app that do not have package id in app.conf. It should generate artifact with app folder name success_app_without_package_id and build artifact success_app_without_package_id_build_name."
      
      - uses: VatsalJagani/splunk-app-action@v0.6
        with:
          app_dir: "without_package_id_app_for_splunk"
          app_build_name: "success_app_without_package_id_build_name"
          app_package_id: "success_app_without_package_id"
          splunkbase_username: ${{ secrets.SPLUNKBASE_USERNAME }}
          splunkbase_password: ${{ secrets.SPLUNKBASE_PASSWORD }}


      - name: "App-Inspect on app without app package id in app.conf (without input parameter app_package_id)"
        run: |
          echo "Running the build and app-inspect checks for an test-app that do not have package id in app.conf. It should generate artifact with app folder name without_package_id_app_for_splunk_build and build artifact without_package_id_app_for_splunk_build."
      
      - uses: VatsalJagani/splunk-app-action@v0.6
        with:
          app_dir: "without_package_id_app_for_splunk"
          app_build_name: "without_package_id_app_for_splunk_build"
          splunkbase_username: ${{ secrets.SPLUNKBASE_USERNAME }}
          splunkbase_password: ${{ secrets.SPLUNKBASE_PASSWORD }}
