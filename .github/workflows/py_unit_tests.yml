# This is a basic workflow to run automated test-cases on GitHub App Action
name: Running Python Unit Tests for Splunk-App-Action

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  push:
    branches:
      - 'develop'

  pull_request:
    branches:
      - '*'
      - '*/*'
      - '**'

  workflow_dispatch:

jobs:
  python-unit-tests:
    name: "Running Python Unit Test Cases"
    runs-on: "ubuntu-latest"

    steps:
        - uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v4

        - name: Display Python version
          run: python -c "import sys; print(sys.version)"

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r tests/requirements.txt

        - name: Run Python Unit Tests
          env:
            SPLUNKBASE_USERNAME_FOR_TEST: ${{ secrets.SPLUNKBASE_USERNAME }}
            SPLUNKBASE_PASSWORD_FOR_TEST: ${{ secrets.SPLUNKBASE_PASSWORD }}
          run: pytest tests --junitxml=junit/test-results.xml --cov=src --cov-config=tests/.coveragerc --cov-report=xml

        - name: Adding GitHub action step summary
          uses: VatsalJagani/pytest-cov-action@v0.6
          with:
            pytest_results_file: "junit/test-results.xml"
            pytest_cov_file: "coverage.xml"
            pytest_cov_failure_threshold: 40
          if: ${{ always() }}

        - name: Linting with Ruff
          run: ruff check --ignore=E721,E722,E401 --output-format=github --exclude=tests/test_app_repos . 
          # continue-on-error: true   # need to remove this later on to catch the errors anf fail the workflow on linting errors
  