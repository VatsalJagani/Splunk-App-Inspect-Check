name: "Run Splunk App Inspect Check"
description: "Run Splunk app-inspect check, cloud-inspect check and ssai (self-service) check on the App build to make sure App will pass the checks on Splunkbase."

branding:
  color: "purple"
  icon: "play"

inputs:
  app_dir:
    description: "Provide app directory. Do not provide the value if the repo's root directory itself if app directory."
    required: false
    default: ""
  app_build_name:
    description: "Provide app build name that should be generated by the action. (Provide without .tgz extension)"
    required: false
    default: "app"
  splunkbase_username:
    description: "Username required to call the Splunkbase API for App-Inspect"
    required: true
  splunkbase_password:
    description: "Password required to call the Splunkbase API for App-Inspect"
    required: true

outputs:
  stdout:
    description: "Program stdout"
  stderr:
    description: "Program stderr"
  error:
    description: "A string of 'true' or 'false' that tells if there were errors."

runs:
  using: "composite"
  steps:
    - name: "Extracting the current branch name"
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: "Clone the Repository"
      uses: actions/checkout@v2
      with:
          ref: ${{ steps.extract_branch.outputs.branch }}
          path: repodir

    - name: "Generating the App Build"
      shell: bash
      run: |
        find repodir/${{inputs.app_dir}} -type f -exec chmod 644 '{}' \;
        find repodir/${{inputs.app_dir}} -type d -exec chmod 755 '{}' \;
        tar -czf ${{inputs.app_build_name}}.tgz repodir/${{inputs.app_dir}}

    - name: "Upload the app build as artifact"
      uses: actions/upload-artifact@v2
      with:
        name: "App-Build-${{inputs.app_build_name}}"
        path: |
          ${{inputs.app_build_name}}.tgz

    - name: "Install Python"
      uses: actions/setup-python@v2

    - name: "Install required packages"
      shell: bash
      run: |
        pip install requests

    - name: "Installing Node JS"
      uses: actions/setup-node@v2
      with:
        node-version: '12'

    - name: "checking environment variables"
      shell: bash
      run: |
        echo "${{inputs.app_dir}} - ${{inputs.app_build_name}} - ${{inputs.splunkbase_username}} - ${{inputs.splunkbase_passsword}}"
        echo "${{env.env_app_dir}} - ${{env.env_app_build_name}} - ${{env.env_splunkbase_username}} - ${{env.env_splunkbase_passsword}}"

    - name: "Running App-Inspect Checks"
      shell: bash
      env:
        SPLUNK_app_dir: '${{inputs.app_dir}}'
        SPLUNK_app_build_name: '${{inputs.app_build_name}}'
        SPLUNK_splunkbase_username: '${{inputs.splunkbase_username}}'
        SPLUNK_splunkbase_password: '${{inputs.splunkbase_passsword}}'
        SPLUNK2_app_dir: '${{env.env_app_dir}}'
        SPLUNK2_app_build_name: '${{env.env_app_build_name}}'
        SPLUNK2_splunkbase_username: '${{env.env_splunkbase_username}}'
        SPLUNK2_splunkbase_password: '${{env.env_splunkbase_passsword}}'
      run: |
        node ${{ github.action_path }}/dist/index.js

    - name: "Upload the app-inspect reports as artifact"
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: "App-Inspect-Report-${{inputs.app_build_name}}"
        path: |
          ${{inputs.app_build_name}}_app_inspect.html
          ${{inputs.app_build_name}}_cloud_inspect.html
          ${{inputs.app_build_name}}_ssai_inspect.html
