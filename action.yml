name: "Run Splunk App Inspect Check"
description: "Splunk App build generation and App-inspect checks with API automatically on change."

branding:
  color: "purple"
  icon: "play"

inputs:
  is_generate_build:
    description: "Whether to generate the App Build or not."
    required: false
    default: true

  app_dir:
    description: "Provide app directory. Do not provide the value if the repo's root directory itself if app directory. Required for App Build Generation and for adding App Utility."
    required: false
    default: "."


  is_app_inspect_check:
    description: "Whether to perform the app-inspect checks or not"
    required: false
    default: true

  splunkbase_username:
    description: "Username required to call the Splunkbase API for App-Inspect. Required when is_app_inspect_check is set to true."
    required: false

  splunkbase_password:
    description: "Password required to call the Splunkbase API for App-Inspect. Required when is_app_inspect_check is set to true."
    required: false

  app_build_path:
    description: "Required only when is_generate_build is set to false and you are generating the app-build in previous steps of the workflow action outside VatsalJagani/splunk-app-action GitHub Action."
    required: false
    default: "NONE"


  app_utilities:
    description: "Add comma separated list of utilities to use."
    required: false
    default: ""

  my_github_token:
    description: "GitHub Secret Token to automatically create Pull request. (Make sure to put it in the Repo secret on GitHub as `MY_GITHUB_TOKEN` and then use it like `{{ secrets.MY_GITHUB_TOKEN }}`. Do not write it in plain text.) Only required if app_utilities is being used."
    required: false
    default: "NONE"

  default_branch_name:
    description: "It auto detects the default branch, but if you want to use different branch then write branch name in this input. This branch will be used to create new branch and create PR."
    required: false
    default: "NONE"

  # TODO - getting the default branch instead with Python


  # is_whats_in_app_enable:
  #   description: "Whether to add content in the README for What's in the App/Add-on"
  #   required: false
  #   default: true
  

outputs:
  stdout:
    description: "Program stdout"
  stderr:
    description: "Program stderr"
  error:
    description: "A string of 'true' or 'false' that tells if there were errors."

runs:
  using: "composite"
  steps:
    - name: "Extracting the current branch name"
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: "Clone the Repository"
      uses: actions/checkout@v2
      if: inputs.app_build_path == 'NONE'
      with:
          ref: ${{ steps.extract_branch.outputs.branch }}
          path: repodir


    - name: "Pre-tasks"
      shell: bash
      run: |
        pwd
        echo "=== Inputs ==="
        echo "app_dir -> ${{inputs.app_dir}}"
        echo "app_build_path -> ${{inputs.app_build_path}}"
        echo "is_app_inspect_check -> ${{inputs.is_app_inspect_check}}"
        echo "is_whats_in_app_enable -> ${{inputs.is_whats_in_app_enable}}"
        echo "splunkbase_username -> ${{inputs.splunkbase_username}} (If using Github secret the value will be ***)"
        mkdir app_inspect_reports


    - name: "Install Python"
      uses: actions/setup-python@v2

    - name: "Install required packages"
      shell: bash
      run: |
        pip install requests


    - name: "Running user defined commands"
      shell: bash
      if: inputs.app_build_path == 'NONE'
      run: |
        pwd
        cd repodir

        for i in $(seq 1 100); do
            command_name="SPLUNK_APP_ACTION_${i}"
            # echo "looking for environment variable: $command_name"
            declare -n command=$command_name
            if [[ -n "$command" ]]; then
                echo "command being executed:- $command"
                bash -c "$command"
            fi
        done

        cd ..
        pwd


    - name: "Running the Splunk App actions"
      shell: bash
      env:
        SPLUNK_app_dir: ${{inputs.app_dir}}
        SPLUNK_app_build_path: ${{inputs.app_build_path}}
        SPLUNK_is_app_inspect_check: ${{inputs.is_app_inspect_check}}
        SPLUNK_is_whats_in_app_enable: ${{inputs.is_whats_in_app_enable}}
        SPLUNK_splunkbase_username: ${{inputs.splunkbase_username}}
        SPLUNK_splunkbase_password: ${{inputs.splunkbase_password}}
        GITHUB_TOKEN: ${{inputs.my_github_token}}
      run: |
        python -u ${{ github.action_path }}/src/main.py


    - name: "Upload the app build as artifact"
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: "App-Build-${{env.app_package_id}}"
        path: ${{env.app_package_id}}.tgz


    - name: "Upload the app-inspect reports as artifact"
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: "App-Inspect-Reports-${{env.app_package_id}}"
        path: ${{env.app_package_id}}_reports
