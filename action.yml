name: "Run Splunk App Inspect Check"
description: "Run Splunk app-inspect check, cloud-inspect check and ssai (self-service) check on the App build to make sure App will pass the checks on Splunkbase."

branding:
  color: "purple"
  icon: "play"

inputs:
  app_dir:
    description: "Provide app directory. Do not provide the value if the repo's root directory itself if app directory."
    required: false
    default: "."
  app_build_name:
    description: "Provide app build name that should be generated by the action. (Provide without .tgz extension)"
    required: false
    default: "app"
  splunkbase_username:
    description: "Username required to call the Splunkbase API for App-Inspect"
    required: true
  splunkbase_password:
    description: "Password required to call the Splunkbase API for App-Inspect"
    required: true

outputs:
  stdout:
    description: "Program stdout"
  stderr:
    description: "Program stderr"
  error:
    description: "A string of 'true' or 'false' that tells if there were errors."

runs:
  using: "composite"
  steps:
    - name: "Extracting the current branch name"
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: "Clone the Repository"
      uses: actions/checkout@v2
      with:
          ref: ${{ steps.extract_branch.outputs.branch }}
          path: repodir
    
    - name: "Pre-tasks"
      shell: bash
      run: |
        echo "=== Inputs ==="
        echo "app_dir -> ${{inputs.app_dir}}"
        echo "app_build_name -> ${{inputs.app_build_name}}"
        echo "splunkbase_username -> ${{inputs.splunkbase_username}} (If using Github secret the value will be ***)"
        mkdir ${{inputs.app_build_name}}_reports
        cd repodir
        rm -rf .github
        rm -rf .git
        cd ..
    
    - name: "Install Python"
      uses: actions/setup-python@v2

    - name: "Install required packages"
      shell: bash
      run: |
        pip install requests

    - name: "Installing Node JS"
      uses: actions/setup-node@v2
      with:
        node-version: '12'


    - name: "Fetching app-package-id from app.conf file"
      shell: bash
      env:
        SPLUNK_app_dir: ${{inputs.app_dir}}
      run: |
        node ${{ github.action_path }}/dist/index.js fetch_app_package_id.py

    - name: "Fetching app-package-id from app.conf file - continue"
      shell: bash
        echo "SPLUNK_FETCHED_APP_PACKAGE_ID -> $SPLUNK_FETCHED_APP_PACKAGE_ID"
        if [[ -n "$SPLUNK_FETCHED_APP_PACKAGE_ID" ]]; then
            echo "Setting app_dir as SPLUNK_FETCHED_APP_PACKAGE_ID -> ${{inputs.app_dir}}"
            export SPLUNK_FETCHED_APP_PACKAGE_ID=${{inputs.app_dir}}
        fi


    - name: "Running user defined commands"
      shell: bash
      run: |
        cd repodir

        for i in $(seq 1 100); do
            command_name="SPLUNK_APP_ACTION_${i}"
            # echo "looking for environment variable: $command_name"
            declare -n command=$command_name
            if [[ -n "$command" ]]; then
                echo "command being executed:- $command"
                $command
            fi
        done

        cd ..


    - name: "Generating the App Build"
      if: ${{ inputs.app_dir != '.' }}
      shell: bash
      run: |
        cd repodir
        ls
        if [[ ${{inputs.app_dir}} =! $SPLUNK_FETCHED_APP_PACKAGE_ID ]]
            mv ${{inputs.app_dir}} $SPLUNK_FETCHED_APP_PACKAGE_ID
        fi
        find $SPLUNK_FETCHED_APP_PACKAGE_ID -type f -exec chmod 644 '{}' \;
        find $SPLUNK_FETCHED_APP_PACKAGE_ID -type d -exec chmod 755 '{}' \;
        tar -czf ${{inputs.app_build_name}}.tgz $SPLUNK_FETCHED_APP_PACKAGE_ID
        cd ..
        mv repodir/${{inputs.app_build_name}}.tgz .
    
    - name: "Generating the App Build (root dir)"
      if: ${{ inputs.app_dir == '.' }}
      shell: bash
      run: |
        mv repodir $SPLUNK_FETCHED_APP_PACKAGE_ID
        find $SPLUNK_FETCHED_APP_PACKAGE_ID -type f -exec chmod 644 '{}' \;
        find $SPLUNK_FETCHED_APP_PACKAGE_ID -type d -exec chmod 755 '{}' \;
        tar -czf ${{inputs.app_build_name}}.tgz $SPLUNK_FETCHED_APP_PACKAGE_ID

    - name: "Upload the app build as artifact"
      uses: actions/upload-artifact@v2
      with:
        name: "App-Build-${{inputs.app_build_name}}"
        path: |
          ${{inputs.app_build_name}}.tgz


    - name: "Running App-Inspect Checks"
      shell: bash
      env:
        SPLUNK_app_build_name: ${{inputs.app_build_name}}
        SPLUNK_splunkbase_username: ${{inputs.splunkbase_username}}
        SPLUNK_splunkbase_password: ${{inputs.splunkbase_password}}
      run: |
        node ${{ github.action_path }}/dist/index.js app_inspect.py

    - name: "Upload the app-inspect reports as artifact"
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: "App-Inspect-Reports-${{inputs.app_build_name}}"
        path: |
          ${{inputs.app_build_name}}_reports
